<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.oos.mapper.ProductMapper">
	<resultMap type="org.oos.domain.CategoryVO" id="Category">
		<result column="cateno" property="cateno" />
		<result column="catename" property="catename" />
	</resultMap>
	<resultMap type="org.oos.domain.ProductOptionVO" id="Option">
		<result column="opno" property="opno" />
		<result column="size" property="size" />
		<result column="qty" property="qty" />
	</resultMap>
	<resultMap type="org.oos.domain.ProductImgVO" id="Image">
		<result column="uuid" property="uuid" />
		<result column="pno" property="pno"/>
		<result column="iname" property="iname" />
		<result column="ipath" property="ipath" />
	</resultMap>
	<resultMap type="org.oos.domain.StoreVO" id="Store">
		<result column="sno" property="sno" />
		<result column="sname" property="sname" />
		<result column="saddress" property="saddress" />
		<result column="tel" property="tel" />
		<collection property="imgList" resultMap="Image" />
	</resultMap>
		<resultMap type="org.oos.domain.HashTagVO" id="Tag">
		<result column="hno" property="hno" />
		<result column="tag" property="tag"/>
		<result column="tagcnt" property="tagcnt" />
		<result column="del" property="del" />
	</resultMap>
	
	<resultMap type="org.oos.domain.ProductVO" id="Product">
		<result column="pno" property="pno" />
		<result column="pname" property="pname" />
		<result column="price" property="price" />
		<result column="sname" property="sname" />
		<result column="sno" property="sno" />
		<result column="regdate" property="regdate" />
		<result column="updatedate" property="updatedate" />
		<result column="del" property="del" />
		<result column="state" property="state" />
		<result column="questionreplycnt" property="questionReplyCnt" />
		<result column="reviewreplycnt" property="reviewReplyCnt" />
		<result column="content" property="content" />
		<collection property="imgList" resultMap="Image" />
		<collection property="store" resultMap="Store" />
		<collection property="optList" resultMap="Option" />
		<collection property="tagList" resultMap="Tag" />
		<collection property="cateList" resultMap="Category" />
	</resultMap>
	
	<update id="upVisitCnt">
		update tbl_product set visitcnt=visitcnt+1 where pno = #{pno}
	</update>
	
	<select id="getByPno" resultMap="Product">
		select p.pno, p.pname, p.price, s.sno, p.state, tel, p.questionreplycnt, p.reviewreplycnt,
		p.content, uuid, iname, ipath, o.opno, o.size, o.qty, sname from tbl_product p 
		left join tbl_product_img i
				on p.pno =i.pno 
		left join tbl_product_option o 
		on p.pno=o.pno
		left join tbl_store s
			on s.sno = p.sno
		where p.pno > 0 and o.opno > 0 and p.del = 'N'
		and uuid != "" and p.pno=#{pno}
	</select>
	
	<!-- <select id="getList2" parameterType="map" resultMap="Product">
		select product.pno,product.pname, product.state
		,product.price,product.sno,product.regdate,product.updatedate,product.del,product.uuid,product.iname,product.ipath
		,s.sname from
		(
		select
			 p.pno ,p.pname,p.price,p.sno,p.regdate,p.updatedate,p.state, del,uuid,iname,ipath 
		from
			tbl_product p left join tbl_product_img i
			on p.pno =i.pno left join tbl_product_option o on p.pno=o.pno
			where p.pno>0
			    group by p.pno
		)product join tbl_store s
			on s.sno = product.sno
		 where s.sno > 0 and product.del='N'	
		<if test="sno != null">
			and s.sno=#{sno}
		</if>
		<if test="seller == null">
			and product.state='O'
		</if>
		<if test="dto != null">
			<if test="dto.cri.filter != null">
			and product.pname like concat("%", #{dto.cri.keyword} ,"%")
			</if>
			<choose>
				<when test="dto.cri.orderby == '1'.toString()">
					order by product.price desc
				</when>
				<when test="dto.cri.orderby == '2'.toString()">
					order by product.price asc
				</when>
				<otherwise>
					order by product.pno desc
				</otherwise>
			</choose>
			limit #{dto.cri.skip} ,#{dto.cri.amount}
		</if>
	</select> -->
	
	<select id="getList2" parameterType="map" resultMap="Product">
		select * from tbl_product p
			left join tbl_product_img i
			on p.pno = i.pno
			left join tbl_store s
			on p.sno = s.sno
			right join tbl_category c
			on c.pno = p.pno
		 where s.sno > 0 and p.del='N' and p.pno > 0 and c.cateno > 0 and uuid != ""
		<if test="sno != null">
			and s.sno=#{sno}
		</if>
		<if test="seller == null">
			and p.state='O'
		</if>
		<if test="dto != null">
			<if test="dto.cri.category != null ">
				and c.catename=#{dto.cri.category}
			</if>
			<if test="dto.cri.filter != null">
			and p.pname like concat("%", #{dto.cri.keyword} ,"%")
			</if>
			<choose>
				<when test="dto.cri.orderby == '1'.toString()">
					order by p.price desc
				</when>
				<when test="dto.cri.orderby == '2'.toString()">
					order by p.price asc
				</when>
				<otherwise>
					order by p.pno desc
				</otherwise>
			</choose>
			limit #{dto.cri.skip} ,#{dto.cri.amount}
		</if>
	</select>
	
	<select id="bestProductList" resultType="org.oos.domain.ProductVO" resultMap="Product">
		<![CDATA[
		select cateno, b.sno, catename, c.pno, b.pname, b.price, b.uuid, b.ipath, b.iname from tbl_category c
		join(select d.pno, pr.sno, pname, price, uuid, ipath, iname, count(*) cnt from tbl_order_detail d
			join(select p.pno, p.sno, pname, price, uuid, ipath, iname from tbl_product p
					join(select * from tbl_product_img
						 where uuid != "" group by pno) i
					on i.pno = p.pno
					where p.pno > 0 and del = 'N') pr
			on pr.pno = d.pno                    
			where odno > 0 and del = 'N'
			and to_days(now()) - to_days(d.regdate) <= 7
			group by d.pno) b
		on c.pno =  b.pno
		where cateno > 0 and del = 'N'
		]]>
		<if test="cateno != null">
			and cateno = ${cateno}
		</if>
		order by cateno asc, cnt desc
		limit 0, 6
	</select>
	
	<insert id="insert">
		insert into tbl_product(pname,price,sno,content)
		values(#{pname},#{price},#{sno},#{content})
		<selectKey resultType="Long" keyProperty="pno" order="AFTER">
			select max(pno) from tbl_product
		</selectKey>
	</insert>

	<update id="modify">
		update tbl_product
		set pname=#{pname},price=#{price},content=#{content}
		where pno=#{pno}
	</update>
	
	<update id="delete">
		update tbl_product
		set del='Y'
		where pno=${pno}
	</update>
	
		<update id="resetVisitCnt">
		update tbl_product set visitcnt=0 where pno >0
	</update>
	
	<select id="count" parameterType="map" resultType="int">
		select count(*)
		from tbl_product p
		left join tbl_store s
			on p.sno = s.sno
		right join tbl_category c
			on c.pno = p.pno
		where p.pno > 0
		<if test="sno != null">
			and s.sno=#{sno}
		</if>
		<if test="seller == null">
			and p.state='O'
		</if>
		<if test="cri.category != null ">
			and c.catename=#{cri.category}
		</if>
		<if test="cri != null and cri.filter != null">
			and pname like concat("%", #{cri.keyword} ,"%")
		</if>
	</select>

	<select id="getName" resultType="string">
		select pname from tbl_product
		where pno>0
	</select>
	
	<update id="updateQuestionReplyCnt">
		update tbl_product set questionreplycnt = questionreplycnt + #{amount}
		where pno = #{pno}
	</update>

	<update id="updateReviewReplyCnt">
		update tbl_product set reviewreplycnt = reviewreplycnt + #{amount}
		where pno = #{pno}
	</update>
	
	<update id="permit" parameterType="map">
		update tbl_product 
		<if test='permit == "O"'>
			set state = 'O'
		</if>
		<if test='permit == "X"'>
			set state = 'X'
		</if>
		where pno = #{pno}
	</update>
	
	<select id="totalProduct" resultType="int">
		select count(*)
		from tbl_product
		where pno > 0 and del='N'

	</select>
</mapper>